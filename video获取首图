<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title></title>
		<style>
			#videoTest{
				width: 300px;
				height: 300px;
			}
		</style>
	</head>
	<body>
		<input id="videoUpload" type="file" accept="video/*">
		<input id="audioUpload" type="file" accept="audio/*">
		<input id="url_input" type="text" />
		<button id="confirm">get</button>
		<img id="post_url" src=""/>
		
		
		<!-- <video src="./movie.mp4" id="videoTest" controls preload="none"> -->
		</video>
		<script>
		let videoEle = document.querySelector('#videoUpload')
		let audioEle = document.querySelector('#audioUpload')
		
		let url_input = document.querySelector('#url_input')
		
		let confirm= document.querySelector('#confirm')
		let post = document.querySelector('#post_url')
		videoEle.addEventListener('change', () => {
		  getVideoImage(URL.createObjectURL(videoEle.files[0]), (img, time) => {
		    document.body.appendChild(img)
		    console.log(img, time)
		  }, 10)
		})
		audioEle.addEventListener('change', () => {
			let audio = document.createElement('audio')
		            audio.preload = 'metadata'
		            audio.onloadedmetadata = function () {
		              window.URL.revokeObjectURL(this.src)
		              console.log(this.duration)
		            }
		            audio.src = URL.createObjectURL(audioEle.files[0])
		})
		
		confirm.addEventListener('click',() => {
			preView("https://fulu-mall.oss-cn-hangzhou.aliyuncs.com/da845724-e66c-43a3-aa74-d22be43c18ba/Image/924042b242a344fb88e1b42f7bfa7c32.mp4#t=0.1")

		})
		
		
		// 获取封面第一帧及时长
		function getVideoImage(path, callback, secs = 1) {
		  var me = this,
		    video = document.createElement('video');
		  video.onloadedmetadata = function () {
		    if ('function' === typeof secs) {
		      secs = secs(this.duration);
		    }
		    this.currentTime = Math.min(Math.max(0, (secs < 0 ? this.duration : 0) + secs), this.duration);
		  };
		  video.onseeked = function (e) {
		    var canvas = document.createElement('canvas');
		    canvas.height = video.videoHeight;
		    canvas.width = video.videoWidth;
		    var ctx = canvas.getContext('2d');
		    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
		    var img = new Image();
		    img.src = canvas.toDataURL();
		    callback.call(me, img, this.currentTime, e);
		  };
		  video.onerror = function (e) {
		    callback.call(me, undefined, undefined, e);
		  };
		  video.src = path;
		}
		/**
		 * Base64 转 Blob对象
		 * @param dataURI
		 * @returns {Blob}
		 */
		function dataURItoBlob(dataURI) {
		  // convert base64/URLEncoded data component to raw binary data held in a string
		  let byteString
		  if (dataURI.split(',')[0].indexOf('base64') >= 0) {
		    byteString = atob(dataURI.split(',')[1])
		  } else {
		    byteString = unescape(dataURI.split(',')[1])
		  }
		
		  // separate out the mime component
		  let mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]
		
		  // write the bytes of the string to a typed array
		  let ia = new Uint8Array(byteString.length)
		  for (let i = 0; i < byteString.length; i++) {
		    ia[i] = byteString.charCodeAt(i)
		  }
		
		  return new Blob([ia], {
		    type: mimeString
		  })
		}
		
		// 网络视频
		function getVideoBlob (url, cb) {
		  var xhr = new XMLHttpRequest();
		  xhr.open('get', url, true);
		  xhr.responseType = 'blob';
		  xhr.onload = function () {
		    if (this.status == 200) {
		      // 获取视频文件大小
		      console.log(this.response.size / 1000000 + 'MB');
		      spiderVideoResponse = this.response;
		      // 将response赋值为Video的src 或者也可以使用preView转换为base64的格式
		      // 截取第一帧的图片方法跟第一种情况一样，而且还解决了获取图片时跨域的问题 一举两得
				 getVideoImage( URL.createObjectURL(this.response),(img, time) => {
		    		document.body.appendChild(img)
		    		console.log(img, time)
		  }, 10)
		    }
		  };
		  xhr.send();
		}
		function preView (url) {
		  let reader = new FileReader();
		  getVideoBlob(url, function (blob) {
		    reader.readAsDataURL(blob);
		  });
		  reader.onload = function (e) {
		    console.log(e.loaded)
		  }
		}
		</script>
	</body>
</html>
